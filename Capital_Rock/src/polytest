
 
 const breakCode = {'a':'11','b':'21','c':'31','d':'41','e':'51','f':'12','g':'22','h':'32','i':'42','j':'42','k':'52','l':'13','m':'23',  
 'n':'33','o':'43','p':'53','q':'14','r':'24','s':'34', 't':'44','u':'54','v':'15','w':'25','x':'35','y':'45','z':'55'}  
 
 const makeCode = {'11':'a','12':'f','13':'l','14':'q','15':'v','21':'b','22':'g','23':'m','24':'r','25':'w','31':'c','32':'h',
 '33':'n','34':'s','35':'x','41':'d','42':'i/j','43':'o','44':'t','45':'y','51':'e','52':'k','53':'p','54':'u','55':'z'}
 //function polyTest(input, encode = true){
   
                         
    

        function polyTestMark4(input, encode= true){
        let code = ""                     
        let inputs = input.toLowerCase()  //get everything the same
        for(let i=0;i<inputs.length;i++){  // regular for loop?  
            letter = inputs[i]            // spaces, again  symbols?
            if(letter === " "){
                code += " "
                continue                 // i love continue
            }
          const letterToNumber = breakCode[letter]  //matchup input letter to obj[letter]
        code += letterToNumber
        }                                     //return
        return code
    }
       // console.log(polyTestMark4("Bring it on back", true))
    
function decode(input){
    message = ""
    for(let i=0;i<input.length;i+=2){
    if(input[i]=== " "){
        i++
        message += " "
    }
        message+= makeCode[`${input[i]}${input[i+1]}`] 
        } return  message
    }
console.log(decode('3251131343 2543241341'))
  // maybe create an array of the numbers and iterate over every 2 numbers?
  // match those numbers to the keys in makeCode
// join together the values of the keys
// somehow deal with any spaces in the meantime
  
function substitution(input, alphabet, encode = true) {
    if(encode === false){
        return unveiled(input, alphabet)
    }
    let wonky = ""
    // loop through input
    for(let i=0;i<input.length;i++){
        let letter = input[i]
        //again, spaces
        if(letter === " "){
            wonky += " "
            continue   //<-- still my new best friend
        }
        //symbols !@#$%^&*()? etc
        let regLetterIdx = 'abcdefghijklmnopqrstuvwxyz'
        .indexOf(letter.toLowerCase())
        if(letter.toUpperCase()===letter.toLowerCase()){
            wonky += letter
            continue
        }
        // build the wonky input version of reg input
       let wonkyLetter = wonky[regletterIdx]
        wonky += wonkyLetter
    }
    return wonky
    
  }
      console.log()
    

   


     // takes an array of numbers, finds matching vales and returns the keys   
    //}

    

    
    

        // let shift = 0
        // for(let i =0; i< numbers.length;i+=shift){
        //     let numberPair = numbers[i]
        //     if(numberPair === " "){
        //     shift = 1
        //     message+=" "
        //     }else {
        //    console.log(numberPair)
        //         shift = 2
        //     }
        // }